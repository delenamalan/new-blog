(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{362:function(e,a,r){e.exports=r.p+"assets/img/prisma_diagram1.ff8d7aa9.png"},363:function(e,a,r){e.exports=r.p+"assets/img/prisma_diagram2.78691e58.png"},364:function(e,a,r){e.exports=r.p+"assets/img/prisma_admin.1dff0104.png"},380:function(e,a,r){"use strict";r.r(a);var t=r(42),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"conceptual-introduction-to-prisma-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conceptual-introduction-to-prisma-1"}},[e._v("#")]),e._v(" Conceptual introduction to Prisma 1")]),e._v(" "),t("p",[e._v("I recently joined a new project built with "),t("a",{attrs:{href:"https://v1.prisma.io/docs/1.34/get-started/01-setting-up-prisma-new-database-JAVASCRIPT-a002/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prisma\n1"),t("OutboundLink")],1),e._v("\nand it took me a while to understand what exactly Prisma actually does. I\nthought I'd write a\nconceptual introduction for other people who find themselves in a similar situation.")]),e._v(" "),t("p",[e._v("If you're looking for setup instructions instead, click\n"),t("a",{attrs:{href:"https://v1.prisma.io/docs/1.34/get-started/01-setting-up-prisma-new-database-JAVASCRIPT-a002/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("\nfor Prisma 1 or "),t("a",{attrs:{href:"https://www.prisma.io/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(" for Prisma 2.")]),e._v(" "),t("h2",{attrs:{id:"so-what-is-prisma-in-one-sentence"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#so-what-is-prisma-in-one-sentence"}},[e._v("#")]),e._v(" So what is Prisma in one sentence?")]),e._v(" "),t("p",[e._v("Prisma is software that creates a "),t("strong",[e._v("GraphQL API for your database")]),e._v("\nso that your "),t("strong",[e._v("backend")]),e._v(" can query your database using either GraphQL directly\nor "),t("strong",[e._v("Prisma-generated type-safe client libraries")]),e._v(" (for Go, TypeScript or\nJavaScript).")]),e._v(" "),t("p",[e._v("You may have heard of "),t("a",{attrs:{href:"https://hasura.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hasura"),t("OutboundLink")],1),e._v(". Hasura is similar to Prisma\nin that it also generates a GraphQL API\nfor your database. However, unlike Hasura, the Prisma GraphQL API is not\nmeant to used outside of your own network.")]),e._v(" "),t("h2",{attrs:{id:"the-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-setup"}},[e._v("#")]),e._v(" The setup")]),e._v(" "),t("p",[e._v("Usually this is what your setup would be:")]),e._v(" "),t("ol",[t("li",[e._v("Your "),t("strong",[e._v("database")]),e._v(" (Mongo, MySQL or PostgreSQL).")]),e._v(" "),t("li",[e._v("A "),t("strong",[e._v("Prisma server")]),e._v(" that can connect to your database.")]),e._v(" "),t("li",[e._v("Your "),t("strong",[e._v("backend API")]),e._v(" server that can perform GraphQL queries on your Prisma Server.")]),e._v(" "),t("li",[e._v("If your backend server is built in JavaScript, TypeScript or Go, you can use the "),t("strong",[e._v("Prisma Client")]),e._v(" to call your Prisma Server instead of constructing GraphQL queries yourself.")]),e._v(" "),t("li",[e._v("Your "),t("strong",[e._v("frontend or other APIs")]),e._v(" that can call your backend API.")])]),e._v(" "),t("p",[e._v("The setup as illustrated in the Prisma docs:")]),e._v(" "),t("p",[t("img",{attrs:{src:r(362),alt:"Prisma diagram"}})]),e._v(" "),t("p",[t("img",{attrs:{src:r(363),alt:"Prisma diagram"}})]),e._v(" "),t("h2",{attrs:{id:"an-example-api-call"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#an-example-api-call"}},[e._v("#")]),e._v(" An example API call")]),e._v(" "),t("p",[e._v("Flipping the stack around, this is what an API call to your backend might look like from start to finish:")]),e._v(" "),t("ol",[t("li",[e._v("Your frontend could call a REST endpoint your backend (your backend could use GraphQL or whatever else you like instead). For example, to get all of the users:")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("GET www.example.com/users\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("When your backend receives the "),t("code",[e._v("/users")]),e._v(" call, it can use the Prisma Client\nlibrary to get the users:")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const users = await prisma.users()\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("The Prisma Client library will translate the "),t("code",[e._v("users()")]),e._v(" function call to a GraphQL query and send it to your Prisma server:")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("query {\n  users {\n    id\n    name\n  }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("The Prisma Server will then convert the GraphQL query to a database query. For example:")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select id, name from users;\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"prisma-tooling"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prisma-tooling"}},[e._v("#")]),e._v(" Prisma Tooling")]),e._v(" "),t("p",[e._v("The two Prisma tools that we've looked at so far was the Prisma server and the Prisma client.")]),e._v(" "),t("p",[t("strong",[e._v("Prisma Server")]),e._v(" was built in Scala and the recommended way to run a Prisma\nServer instance is with\n"),t("a",{attrs:{href:"https://v1.prisma.io/docs/1.34/prisma-server/local-prisma-setup-je3i/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("You can also setup a demo server on "),t("a",{attrs:{href:"https://v1.prisma.io/docs/1.34/prisma-server/demo-servers-prisma-cloud-jfr3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prisma\nCloud"),t("OutboundLink")],1),e._v("\nfor free.")]),e._v(" "),t("p",[e._v("The "),t("strong",[e._v("Prisma Client")]),e._v(" consists of generated files that makes it easier for you\nto make queries on your database. To generate the Prisma client, you need to\ninstall the "),t("strong",[e._v("Prisma CLI")]),e._v(".")]),e._v(" "),t("p",[e._v("The "),t("strong",[e._v("Prisma CLI")]),e._v(" is what ties everything together in Prisma. It allows you to\nchange the structure of your database, deploy changes to your Prisma server,\nopen up a "),t("strong",[e._v("Prisma Admin")]),e._v(" page, etc. You can install it using either brew,\nyarn or npm.")]),e._v(" "),t("p",[e._v("Finally, "),t("strong",[e._v("Prisma Admin")]),e._v(" is a visual interface that you can use to manage your\ndatabase. You can run it with "),t("code",[e._v("prisma admin")]),e._v(". It will open a page in your\nbrowser similar to this one:")]),e._v(" "),t("p",[t("img",{attrs:{src:r(364),alt:"Prisma Admin"}})]),e._v(" "),t("h2",{attrs:{id:"prisma-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prisma-services"}},[e._v("#")]),e._v(" Prisma Services")]),e._v(" "),t("p",[e._v("One concept we haven't discussed so far is Prisma \"services.\" You'll often see\nservices mentioned in the documentation, but it sounds more complicated than it\nreally is.")]),e._v(" "),t("p",[e._v("Essentially, all it means it that a single Prisma Server has the capability of\nserving more than one GraphQL API. A Prisma "),t("strong",[e._v("service")]),e._v(" refers to a single\ndatabase and its GraphQL API that is served by a Prisma Server.")]),e._v(" "),t("p",[e._v("The following diagram should make things clearer:")]),e._v(" "),t("CaptionedImage",{attrs:{src:"/prisma/prisma.svg",caption:"Prisma Services Diagram"}})],1)}),[],!1,null,null,null);a.default=s.exports}}]);